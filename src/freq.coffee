freqTable = [
  { # Octave 0

    "a": 27.5000
    "l": 29.1353
    "b": 30.8677
  }

  { # Octave 1
    "c": 32.7032
    "h": 34.6479
    "d": 36.7081
    "i": 38.8909
    "e": 41.2035
    "f": 43.6536
    "j": 46.2493
    "g": 48.9995
    "k": 51.9130
    "a": 55.0000
    "l": 58.2705
    "b": 61.7354
  }

  { # Octave 2
    "c": 65.4064
    "h": 69.2957
    "d": 73.4162
    "i": 77.7817
    "e": 82.4069
    "f": 87.3071
    "j": 92.4986
    "g": 97.9989
    "k": 103.826
    "a": 110.000
    "l": 116.541
    "b": 123.471
  }

  { # Octave 3
    "c": 130.813
    "h": 138.591
    "d": 146.832
    "i": 155.563
    "e": 164.814
    "f": 174.614
    "j": 184.997
    "g": 195.998
    "k": 207.652
    "a": 220.000
    "l": 233.082
    "b": 246.942
  }

  { # Octave 4
    "c": 261.626
    "h": 277.183
    "d": 293.665
    "i": 311.127
    "e": 329.628
    "f": 349.228
    "j": 369.994
    "g": 391.995
    "k": 415.305
    "a": 440.000
    "l": 466.164
    "b": 493.883
  }

  { # Octave 5
    "c": 523.251
    "h": 554.365
    "d": 587.330
    "i": 622.254
    "e": 659.255
    "f": 698.456
    "j": 739.989
    "g": 783.991
    "k": 830.609
    "a": 880.000
    "l": 932.328
    "b": 987.767
  }

  { # Octave 6
    "c": 1046.50
    "h": 1108.73
    "d": 1174.66
    "i": 1244.51
    "e": 1318.51
    "f": 1396.91
    "j": 1479.98
    "g": 1567.98
    "k": 1661.22
    "a": 1760.00
    "l": 1864.66
    "b": 1975.53
  }

  { # Octave 7
    "c": 2093.00
    "h": 2217.46
    "d": 2349.32
    "i": 2489.02
    "e": 2637.02
    "f": 2793.83
    "j": 2959.96
    "g": 3135.96
    "k": 3322.44
    "a": 3520.00
    "l": 3729.31
    "b": 3951.07
  }

  { # Octave 8
    "c": 4186.01
  }
]

legalNoteRegex = /[a-l]/

findFreq = (octave, note) ->
  note = note.toLowerCase()
  if (octave >= 0) and (octave < freqTable.length) and legalNoteRegex.test(note)
    octaveTable = freqTable[octave]
    if octaveTable? and octaveTable[note]?
      return octaveTable[note]
  return 440.0

module.exports =
  freqTable: freqTable
  findFreq: findFreq
